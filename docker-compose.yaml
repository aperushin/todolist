version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
    - "5432:5432"
    volumes:
    - todolist_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 3s
      timeout: 3s
      retries: 15

  api:
    build:
      target: dev_image
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./todolist:/code/todolist

  collect_static:
    build:
      target: dev_image
    env_file: .env
    entrypoint: ''
    volumes:
      - django_static:/code/todolist/static/
    command: python /code/todolist/manage.py collectstatic -c --no-input

  frontend:
    image: sermalenk/skypro-front:lesson-36
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static

volumes:
  todolist_pg_data:
  django_static:
