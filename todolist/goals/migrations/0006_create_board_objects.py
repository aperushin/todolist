# Generated by Django 4.2.4 on 2023-08-11 09:34
from django.db import migrations, transaction
from django.utils import timezone


def create_objects(apps, schema_editor):
    User = apps.get_model('core', 'User')
    Board = apps.get_model('goals', 'Board')
    BoardParticipant = apps.get_model('goals', 'BoardParticipant')
    GoalCategory = apps.get_model('goals', 'GoalCategory')

    now = timezone.now()

    with transaction.atomic():
        for user_id in User.objects.values_list('id', flat=True):
            # Create a new board for each user
            new_board = Board.objects.create(title='My goals', created=now, updated=now)

            # Create an owner participant for this board
            BoardParticipant.objects.create(
                user_id=user_id,
                board=new_board,
                role=1,  # 1 == Owner
                created=now,
                updated=now,
            )

            # Add all user's existing categories to this new board
            GoalCategory.objects.filter(user_id=user_id).update(board=new_board)


def remove_objects(apps, schema_editor):
    """
    Reverse function for create_objects
    """
    User = apps.get_model('core', 'User')
    Board = apps.get_model('goals', 'Board')
    BoardParticipant = apps.get_model('goals', 'BoardParticipant')
    GoalCategory = apps.get_model('goals', 'GoalCategory')

    with transaction.atomic():
        for user_id in User.objects.values_list('id', flat=True):
            GoalCategory.objects.filter(user=user_id).update(board=None)
        BoardParticipant.objects.all().delete()
        Board.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('goals', '0005_board_goalcategory_board_boardparticipant'),
    ]

    operations = [
        migrations.RunPython(create_objects, reverse_code=remove_objects),
    ]
