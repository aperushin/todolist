# Generated by Django 4.2.4 on 2023-08-11 09:34
from django.db import migrations, transaction
from django.utils import timezone


def create_objects(apps, schema_editor):
    User = apps.get_model('core', 'User')
    Board = apps.get_model('goals', 'Board')
    BoardParticipant = apps.get_model('goals', 'BoardParticipant')
    GoalCategory = apps.get_model('goals', 'GoalCategory')

    with transaction.atomic():
        for user in User.objects.all():
            # Create a new board for each user
            new_board = Board.objects.create(
                title='My goals',
                created=timezone.now(),
                updated=timezone.now(),
            )
            # Create an owner participant for this board
            BoardParticipant.objects.create(
                user=user,
                board=new_board,
                role=1,  # 1 == Owner
                created=timezone.now(),
                updated=timezone.now(),
            )

            # Add all user's existing categories to this new board
            GoalCategory.objects.filter(user=user).update(board=new_board)


def remove_objects(apps, schema_editor):
    """
    Reverse function for create_objects
    """
    User = apps.get_model('core', 'User')
    Board = apps.get_model('goals', 'Board')
    BoardParticipant = apps.get_model('goals', 'BoardParticipant')
    GoalCategory = apps.get_model('goals', 'GoalCategory')

    with transaction.atomic():
        for user in User.objects.all():
            GoalCategory.objects.filter(user=user).update(board=None)
        BoardParticipant.objects.all().delete()
        Board.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('goals', '0005_board_goalcategory_board_boardparticipant'),
    ]

    operations = [
        migrations.RunPython(create_objects, reverse_code=remove_objects),
    ]
